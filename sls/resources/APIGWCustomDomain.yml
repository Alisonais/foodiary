Conditions:
  ShoudSetupAPIGWCustomDomain: !And
    - !Not
      - !Equals
        - ${env:API_DOMAIN_NAME, ''}
        - ''
    - !Not
      - !Equals
        - ${env:ROUTE53_HOSTED_ZONE_ID, ''}
        - ''

Resources:
  APIGWCustomDomainCertificate:
    Condition: ShoudSetupAPIGWCustomDomain
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: ${env:API_DOMAIN_NAME, ''}
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: ${env:API_DOMAIN_NAME, ''}
          HostedZoneId: ${env:ROUTE53_HOSTED_ZONE_ID, ''}

  APIGWCustomDomain:
    Condition: ShoudSetupAPIGWCustomDomain
    Type: AWS::ApiGatewayV2::DomainName
    Properties:
      RoutingMode: API_MAPPING_ONLY
      DomainName: ${env:API_DOMAIN_NAME, ''}
      DomainNameConfigurations:
        - EndpointType: REGIONAL
          IpAddressType: ipv4
          SecurityPolicy: TLS_1_2
          CertificateArn: !Ref APIGWCustomDomainCertificate

  APIGWCustomDomainMapping:
    Condition: ShoudSetupAPIGWCustomDomain
    Type: AWS::ApiGatewayV2::ApiMapping
    Properties:
      ApiId: !Ref HttpApi
      DomainName: !Ref APIGWCustomDomain
      Stage: $default

  APIGWCustomDomainDNSRecord:
    Condition: ShoudSetupAPIGWCustomDomain
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Ref APIGWCustomDomain
      Type: A
      HostedZoneId: ${env:ROUTE53_HOSTED_ZONE_ID, ''}
      AliasTarget:
        DNSName: !GetAtt APIGWCustomDomain.RegionalDomainName
        HostedZoneId: !GetAtt APIGWCustomDomain.RegionalHostedZoneId
